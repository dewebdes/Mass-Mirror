mass-mirror-node/
â”œâ”€â”€ main.js                    # Entrypoint: orchestrates modules & config
â”œâ”€â”€ launchBrowser.js          # Spawns Chrome with diagnostic flags
â”œâ”€â”€ mirrorServer.js           # WebSocket server for mirrored extension events
â”œâ”€â”€ feedRouter.js             # Routes events to protocol processors
â”œâ”€â”€ modules/
â”‚   â”œâ”€â”€ processorFetch.js     # Enriches HTTP flows with method, headers, diagnostics
â”‚   â”œâ”€â”€ processorWS.js        # Parses WebSocket upgrades, pings, payloads
â”‚   â””â”€â”€ diagnostics/
â”‚       â”œâ”€â”€ corsChecker.js         # Evaluates CORS anomalies (flags origin/status/method mismatch)
â”‚       â””â”€â”€ simpleRequestClassifier.js  # Detects simple/non-simple CORS requests
â”œâ”€â”€ dashboard/
â”‚   â”œâ”€â”€ server.js             # Express + WebSocket backend for dashboard
â”‚   â”œâ”€â”€ dashboard.html        # Table layout: expandable rows for response/inspect
â”‚   â””â”€â”€ dashboardClient.js    # UI controller: injects expanded areas, handles symbols
â”œâ”€â”€ utils/
â”‚   â”œâ”€â”€ flowFormatter.js      # Formats request/response metadata for dashboard
â”‚   â”œâ”€â”€ flowStore.js          # (New) Caches flows per tab/session for expansion logic
â”‚   â””â”€â”€ logger.js             # Timestamped log utility for raw flow snapshots
â”œâ”€â”€ config/
â”‚   â””â”€â”€ settings.json         # Port, profile, start URL, toggle modules
â”œâ”€â”€ public/
â”‚   â””â”€â”€ icons/                # Visual assets (optional: tab favicons, protocol symbols)
â”œâ”€â”€ package.json
â””â”€â”€ README.md



---

### ðŸ§­ **Suggested Code Printing Order (Cognitive Flow)**

#### ðŸ”¹ Phase 1: System Spine & Entry
Start with the projectâ€™s skeletal flowâ€”how modules connect, how the app boots.
1. `main.js` â€“ The orchestrator
2. `launchBrowser.js` â€“ The gatekeeper of diagnostic Chrome
3. `mirrorServer.js` â€“ The event broker
4. `feedRouter.js` â€“ The flow distributor

#### ðŸ”¹ Phase 2: Flow Processors
Handle packet-level logic and how flows are enriched.
5. `processorFetch.js`
6. `processorWS.js`

#### ðŸ”¹ Phase 3: Diagnostic Mirrors
Reveal boundaries and ethical flags.
7. `corsChecker.js`
8. `simpleRequestClassifier.js`

#### ðŸ”¹ Phase 4: Dashboard Frontend
Visualize stories from passive flows.
9. `dashboard.html`
10. `dashboardClient.js`
11. `server.js`

#### ðŸ”¹ Phase 5: Utilities
The unsung helpersâ€”formatters, loggers, storage.
12. `flowFormatter.js`
13. `flowStore.js`
14. `logger.js`

#### ðŸ”¹ Phase 6: Config & Assets
Close with knobs, dials, and visual resonance.
15. `settings.json`
16. Optional: `icons/` and README

---




---

### ðŸªŸ Edge Launch Script (Windows CMD)

```cmd
start "" "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe" ^
  --user-data-dir="C:\MassMirrorProfiles\EdgeProfile" ^
  --remote-debugging-port=9222 ^
  --disable-extensions ^
  --disable-popup-blocking ^
  --disable-background-networking ^
  --window-size=1280,800 ^
  --disable-features=AutomationControlled ^
  --no-first-run ^
  --new-window "https://your-start-page.local"
```

---

### ðŸ§­ Chrome Launch Script (Windows CMD)

```cmd
start "" "C:\Program Files\Google\Chrome\Application\chrome.exe" ^
  --user-data-dir="C:\MassMirrorProfiles\ChromeProfile" ^
  --remote-debugging-port=9223 ^
  --disable-extensions ^
  --disable-popup-blocking ^
  --disable-background-networking ^
  --window-size=1280,800 ^
  --disable-features=AutomationControlled ^
  --no-first-run ^
  --new-window "https://your-start-page.local"
```

---

### ðŸ““ Notes for Precision

- **`--user-data-dir`**: Creates or reuses a clean sandbox profileâ€”preserves local storage, avoids noise.
- **`--remote-debugging-port`**: Lets you inspect flows externally if needed (e.g., via Chrome DevTools Protocol).
- **`--disable-extensions`**: Forces purityâ€”no rogue interference except your extension.
- **Window size + flags**: Ensures reproducibility in viewport and behavior across runs.
- **Custom Start URL**: Replace with whatever diagnostic page you want as the entrypoint (local or live).


netsh advfirewall firewall add rule name="MassMirror9222" dir=in action=allow protocol=TCP localport=9222
netsh advfirewall firewall add rule name="MassMirrorOut9222" dir=out action=allow protocol=TCP localport=9222

netstat -aon | findstr :9222

